{"version":3,"sources":["components/Navbar/Navbar.js","components/Balance/Balance.js","components/Transactions/Transactions.js","components/AddTransaction/AddTransaction.js","App.js","index.js"],"names":["Navbar","handleUpdateMonth","useState","monthNumber","setMonthNumber","months","handleMonths","selectedKey","a","parseInt","useEffect","className","Nav","defaultActiveKey","as","onSelect","Item","Link","eventKey","icon","faChevronLeft","style","color","disabled","faChevronRight","Balance","transactions","month","incomes","setIncomes","expenses","setExpenses","balance","setBalance","myIncomes","myExpenses","empty","filter","item","Date","parse","date","getMonth","map","type","temporalIncome","parseFloat","amount","temporalExpense","handleBalance","borderRight","borderLeft","Transactions","transaction","showDetails","setShowDetails","name","faChevronDown","onClick","faChevronUp","Alert","variant","show","Heading","AddTransaction","handleAddData","smShow","setSmShow","setName","setAmount","setType","setDate","Button","styles","position","size","block","Modal","centered","onHide","aria-labelledby","Header","Title","id","Body","Form","Group","controlId","Label","Control","placeholder","required","onChange","event","target","value","min","max","defaultValue","alert","transactionData","App","setMonth","update","setUpdate","index","myName","myAmount","myType","myDate","undefined","Math","floor","random","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6657595.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './styles.css'\r\n\r\nconst Navbar = ({handleUpdateMonth}) => {\r\n    const [monthNumber, setMonthNumber] = useState(0)\r\n    const months = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"]\r\n\r\n    const handleMonths = async (selectedKey) => {\r\n        setMonthNumber(monthNumber + parseInt(selectedKey))\r\n        \r\n        if(monthNumber === 0 && selectedKey === '-1') {\r\n            setMonthNumber(11)\r\n        }\r\n        if(monthNumber === 11 && selectedKey === '1'){\r\n            setMonthNumber(0)\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        handleMonths(0)\r\n        handleUpdateMonth(monthNumber)\r\n    })\r\n    return (\r\n        <div className=\"navbar-container navbar-display\">\r\n            <Nav defaultActiveKey=\"/home\" as=\"ul\" onSelect={(selectedKey) => handleMonths(selectedKey)}>\r\n            <Nav.Item as=\"li\" className=\"navbar-display\">\r\n                <Nav.Link eventKey=\"-1\" >\r\n                    <FontAwesomeIcon icon={faChevronLeft} style={{color: \"white\"}}/>\r\n                </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item as=\"li\" className=\"navbar-subitem navbar-display\">\r\n                <Nav.Link eventKey=\"0\" disabled style={{color: \"white\"}}>{months[monthNumber === 0 ? 11 : monthNumber - 1]}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item as=\"li\" className=\"navbar-item navbar-display\">\r\n                <Nav.Link eventKey=\"0\" disabled style={{color: \"white\"}}>{months[monthNumber]}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item as=\"li\" className=\"navbar-subitem navbar-display\">\r\n                <Nav.Link eventKey=\"0\" disabled style={{color: \"white\"}}>{months[monthNumber === 11 ? 0 : monthNumber + 1]}</Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item as=\"li\" className=\"navbar-display\">\r\n                <Nav.Link eventKey=\"1\" >\r\n                    <FontAwesomeIcon icon={faChevronRight} style={{color: \"white\"}}/>\r\n                </Nav.Link>\r\n            </Nav.Item>\r\n            </Nav>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nimport './styles.css'\r\nconst Balance = ({transactions, month}) => {\r\n    const [incomes, setIncomes] = useState(0)\r\n    const [expenses, setExpenses] = useState(0)\r\n    const [balance, setBalance] = useState(0)\r\n\r\n    const handleBalance = () => {\r\n        var myIncomes = 0\r\n        var myExpenses = 0\r\n        var empty = true\r\n        transactions.filter(item => new Date(Date.parse(item.date)).getMonth() === month).map(item => {\r\n            if(item.type === false) {\r\n                var temporalIncome = parseFloat(item.amount)\r\n                myIncomes = myIncomes + temporalIncome\r\n            } else {\r\n                var temporalExpense = parseFloat(item.amount)\r\n                myExpenses = myExpenses + temporalExpense\r\n            }\r\n\r\n            empty = false\r\n            setIncomes(myIncomes)\r\n            setExpenses(myExpenses)\r\n            setBalance(myIncomes - myExpenses)\r\n        })\r\n\r\n        if(empty === true){\r\n            setIncomes(0)\r\n            setExpenses(0)\r\n            setBalance(0)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleBalance()\r\n    })\r\n\r\n    return (\r\n        <div className=\"balance-container\">\r\n            <div className=\"balance-general\">\r\n                <p>Balance del mes</p>\r\n                <h2 className=\"color-neutral\">${balance}</h2>\r\n            </div>\r\n            <div className=\"balance-transactions\">\r\n                <div className=\"balance-balances\" style={{borderRight: \"1px solid lightgray\"}}>\r\n                    <span className=\"color-positive\">Ingresos</span>\r\n                    <h3 className=\"color-positive\">+${incomes}</h3>\r\n                </div>\r\n                <div className=\"balance-balances\" style={{borderLeft: \"1px solid lightgray\"}}>\r\n                    <span className=\"color-negative\">Gastos</span>\r\n                    <h3 className=\"color-negative\">-${expenses}</h3>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, {useState, useEffect} from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './styles.css'\r\n\r\nconst Transactions = ({transaction, month}) => {\r\n    const [showDetails, setShowDetails] = useState(false)    \r\n\r\n    useEffect(() => {\r\n        setShowDetails(false)\r\n    },[month])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"transactions-container\">\r\n                <div className={transaction.type ? \"background-negative transactions-negative\" : \"background-positive transactions-positive\"}></div>\r\n                <div className=\"transactions-concept\">\r\n                    <h5>{transaction.name}</h5>\r\n                </div>\r\n                <div className=\"transactions-amount\">\r\n                    <p className={transaction.type ? \"color-negative\" : \"color-positive\"}>{transaction.type ? '-' : '+'}${transaction.amount}</p>\r\n                </div>\r\n                <div className=\"transactions-arrow\">\r\n                    {showDetails ? \r\n                    <FontAwesomeIcon icon={faChevronDown} onClick={() => setShowDetails(!showDetails)}/> :\r\n                    <FontAwesomeIcon icon={faChevronUp} onClick={() => setShowDetails(!showDetails)}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Alert variant=\"light\" show={showDetails} className=\"transactions-details\">\r\n                    <Alert.Heading>Detalles de la transaccion</Alert.Heading>\r\n                    <hr />\r\n                    <div className=\"transactions-subDetails\">\r\n                        <div className=\"transactions-balances\" style={{borderRight: \"1px solid lightgray\"}}>\r\n                            <span className=\"color-neutral\">{transaction.name}</span>\r\n                            <p className=\"color-neutral\">{transaction.date}</p>\r\n                        </div>\r\n                        <div className=\"transactions-balances\" style={{borderLeft: \"1px solid lightgray\"}}>\r\n                            <h3 className={transaction.type ? \"color-negative\" : \"color-positive\"}>${transaction.amount}</h3>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transactions\r\n","import React, {useState, useEffect} from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport './styles.css'\r\n\r\nconst AddTransaction = ({handleAddData}) => {\r\n    const [smShow, setSmShow] = useState(false);\r\n\r\n    const [name, setName] = useState('')\r\n    const [amount, setAmount] = useState(0)\r\n    const [type, setType] = useState('')\r\n    const [date, setDate] = useState('')\r\n\r\n    return (\r\n        <div >\r\n            <Button className=\"add-button background-neutral\" styles={{position: \"sticky\"}} onClick={() => setSmShow(true)} variant=\"primary\" size=\"lg\" block>Agregar Movimiento</Button>{' '}\r\n            <Modal centered size=\"sm\" show={smShow} onHide={() => setSmShow(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n                <Modal.Header>\r\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">Nueva transaccion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Concepto</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Concepto\" required onChange={(event) => {setName(event.target.value)}} value={name} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Monto</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Monto\" required onChange={(event) => {setAmount(event.target.value)}} value={amount}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Fecha</Form.Label>\r\n                        <Form.Control type=\"date\" placeholder=\"Monto\" min=\"01/01/2021\" max=\"12/31/2021\" required onChange={(event) => {setDate(event.target.value)}} value={date}/>\r\n                    </Form.Group>\r\n                    <br/>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Control as=\"select\" required onChange={(event) => {setType(event.target.value)}} value={type}>\r\n                            <option defaultValue>Ingreso</option>\r\n                            <option>Gasto</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <br/>\r\n                    <Button className=\"submit-button background-neutral\" variant=\"primary\" onClick={() => {\r\n                        var myType = false\r\n                        if(name != '' && amount != '' && date != ''){\r\n                            if(type === '' || type === 'Ingreso'){\r\n                                myType = false\r\n                            } else {\r\n                                myType = true\r\n                            }\r\n\r\n                            handleAddData(name, amount, myType, date)\r\n\r\n                            setSmShow(false)\r\n                            setName('')\r\n                            setAmount(0)\r\n                            setType('')\r\n                            setDate('')\r\n                        } else {\r\n                            alert('You must fill all camps to continue')\r\n                        }\r\n                    }}>Submit</Button>\r\n                </Form>\r\n\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Navbar, Balance, Transactions,AddTransaction } from './components/index'\r\nimport { BrowserRouter as Router, Switch, Route, useRouteMatch } from 'react-router-dom'\r\n\r\nvar transactionData = [\r\n    {id: 1, name: \"Nomina\", amount: \"5000\", type: false, date: \"01/01/2021\"},\r\n    {id: 2, name: \"Pago de servicio agua\", amount: \"327.23\", type: true, date: \"01/01/2021\"},\r\n    {id: 3, name: \"Supermercado\", amount: \"265.5\", type: true, date: \"01/01/2021\"},\r\n    {id: 4, name: \"Chili's La rioja\", amount: \"125\", type: true, date: \"01/02/2021\"},\r\n    {id: 5, name: \"Transferencia Juan\", amount: \"350\", type: false, date: \"01/02/2021\"},\r\n    {id: 6, name: \"Jeans levis\", amount: \"599\", type: true, date: \"01/05/2021\"},\r\n    {id: 7, name: \"Nomina\", amount: \"7000\", type: false, date: \"02/01/2021\"},\r\n    {id: 8, name: \"Transferencia Lisa\", amount: \"820\", type: false, date: \"02/08/2021\"},\r\n    {id: 9, name: \"Compra en linea\", amount: \"728.54\", type: true, date: \"02/08/2021\"},\r\n    {id: 10, name: \"Vacaciones\", amount: \"1358.25\", type: true, date: \"02/13/2021\"},\r\n    {id: 11, name: \"Nomina\", amount: \"6000\", type: false, date: \"07/01/2021\"},\r\n    {id: 12, name: \"Cumpleaños\", amount: \"2000\", type: true, date: \"07/21/2021\"},\r\n]\r\nconst App = () => {\r\n    //const [transactionData, setTransactionData] = useState(data)\r\n    const [month, setMonth] = useState(0)\r\n    const [update, setUpdate] = useState(false)\r\n\r\n    const handleUpdateMonth = (monthNumber) => {\r\n        setMonth(monthNumber)\r\n    }\r\n\r\n    const handleAddData = (myName, myAmount, myType, myDate) =>  {\r\n        if(myName === undefined || myAmount === undefined || myDate === undefined){\r\n        } else {\r\n            var id = Math.floor(Math.random() * 9999999999999)\r\n            transactionData.push({id: id, name: myName, amount: myAmount, type: myType, date: myDate})\r\n            //setTransactionData((data) => {return data})\r\n            setUpdate(!update)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <Navbar handleUpdateMonth={handleUpdateMonth} />\r\n            <Balance transactions={transactionData} month={month}/>\r\n            {transactionData.filter(item => new Date(Date.parse(item.date)).getMonth() === month).map((item, index) => (\r\n                <Transactions transaction={item} month={month} />\r\n            ))}\r\n            <AddTransaction handleAddData={handleAddData}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nimport './styles.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}